<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Android App</title>
      <link href="/liangjunyi.github.io/2022/05/16/android-app-project/"/>
      <url>/liangjunyi.github.io/2022/05/16/android-app-project/</url>
      
        <content type="html"><![CDATA[<h1 id="Touchless-Chef"><a href="#Touchless-Chef" class="headerlink" title="Touchless Chef"></a>Touchless Chef</h1><blockquote><p><a href="https://istd.sutd.edu.sg/undergraduate/courses/50001-information-systems-programming">50.001</a> 1D Project</p><p>A POC Recipe Android Application using Google Mediapipe Hands Tracking model for smart touchless scrolling.</p><p>Deliverables:</p><ul><li>Download and install our <code>.apk</code> <a href="https://drive.google.com/file/d/13otJ7cr-M_WNgoN18USStgj5GLp90yvS/view?usp=sharing"><em><strong>HERE</strong></em></a> to try it out</li><li><a href="https://drive.google.com/file/d/1CY5GiMf-hH6lPLB7P39XUdJx_tyvs2Lg/view">Slides</a></li><li><a href="https://drive.google.com/file/d/1Y4r8ZRK22YiWPUSEJxjkPF3D8pMjsIxF/view?usp=sharing">Poster</a></li><li><a href="https://drive.google.com/file/d/1eMMJQq2ctQO_Nt-fLtD9gfOnbFEruVBF/view?usp=sharing">Video</a></li></ul></blockquote><h2 id="A-Acknowledgement"><a href="#A-Acknowledgement" class="headerlink" title="A. Acknowledgement:"></a>A. Acknowledgement:</h2><ul><li><p>Tran Nguyen Bao Long</p><p>@TNBL</p><p>: Project Lead</p><ul><li>define software architecture</li><li>documentation</li></ul></li><li><p>Li Xueqing</p><p>@cnmnrll</p><p>: Project Design</p><ul><li>set basic <code>Recipe</code>, <code>Ingredients</code> and <code>Instructions</code> models <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/model"><code>model</code></a></li><li>documentation</li></ul></li><li><p>Melodie Chew En Qi</p><p>@melmelchew</p><p>: Marketing + Frontend</p><ul><li><code>RecyclerView</code> and <code>NavigationView</code></li><li><a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/adapter/recipe"><code>adapter</code></a> for <code>RecyclerView</code></li></ul></li><li><p>Melvin Lim Boon Han</p><p>@melvinlimbh</p><p>: Marketing + Frontend</p><ul><li>Fragments for different cuisines <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/home"><code>home</code></a></li><li>Fragments for creating recipes <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/recipe">RecipeCreate</a></li><li>all resources and layouts <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/res"><code>res</code></a></li></ul></li><li><p>Han Jin</p><p>@dlmszhhh</p><p>: Backend Acitivity</p><ul><li>basic recipe activities <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/activity"><code>acitivity</code></a></li></ul></li><li><p>Wang Zhouran</p><p>@wzrwzr23</p><p>: Backend Database</p><ul><li>setup <code>SQLite</code> database and corresponding Data Access Objects <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/dao"><code>dao</code></a> and <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/adapter/DatabaseAdapter.java"><code>adapter</code></a></li></ul></li><li><p>Liang Junyi</p><p>@LiangJunyi-010</p><p>Backend HandTracking</p><ul><li>implement HandTracking using Google Mediapipe <a href="https://google.github.io/mediapipe/solutions/hands.html"><strong>Hands model</strong></a> for touchless scrolling in <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/activity/recipe/ViewRecipeActivity.java"><code>ViewRecipeActivity</code></a></li></ul></li></ul><h2 id="B-Description"><a href="#B-Description" class="headerlink" title="B. Description"></a>B. Description</h2><blockquote><p>Overview of Design Pattern used:</p><ul><li><strong>Adapter Design Pattern</strong> (for SQLite database and RecyclerView)</li><li><strong>Singleton Design Pattern</strong> (for SQLite database)</li><li><strong>Observer Design Pattern</strong> (for <code>CreateRecipeActivity</code>)</li><li><strong>Factory Design Pattern</strong> (for Cuisine Fragment)</li><li><strong>Template Method Design Pattern</strong> (for Create Recipe Fragment)</li></ul></blockquote><h3 id="0-Model"><a href="#0-Model" class="headerlink" title="0. Model"></a>0. <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/model">Model</a></h3><ul><li>Utilize<code>Parcelable</code>interface:<ul><li>speed up data transfer using Java Serializable</li><li>easily pass data as <code>Bundle</code> object through Activity</li></ul></li><li>Recipe :<ul><li><code>id</code>: primary key for SQLite</li><li><code>name</code>: name of recipe</li><li><code>description</code>: short description of recipe</li><li><code>category</code>: category&#x2F;cuisine (Vietnamese&#x2F;Chinese)</li><li><code>mealType</code>: type of meals (Breakfast, Dinner,…)</li><li><code>time</code>: estimated to prepare the dish</li><li><code>imagePath</code>: local URI path to Recipe image</li><li><code>ingredients</code>: list of ingredients</li><li><code>instructions</code>: list of instructions</li></ul></li><li>Instruction :<ul><li><code>id</code>: primary key for SQLite</li><li><code>recipeID</code>: foreign key</li><li><code>content</code>: instruction body</li></ul></li><li>Ingredient :<ul><li><code>id</code>: primary key for SQLite</li><li><code>recipeID</code>: foreign key</li><li><code>name</code>: ingredient name <a href="https://camo.githubusercontent.com/797e593a78147ad691b2d046e1b76426c063283092763db6a8c7566d7b6ffb21/68747470733a2f2f692e696d6775722e636f6d2f594f4c374f756a2e706e67"><img src="https://camo.githubusercontent.com/797e593a78147ad691b2d046e1b76426c063283092763db6a8c7566d7b6ffb21/68747470733a2f2f692e696d6775722e636f6d2f594f4c374f756a2e706e67" alt="img"></a></li></ul></li></ul><h3 id="1-Database"><a href="#1-Database" class="headerlink" title="1. Database"></a>1. Database</h3><ul><li>We use local database SQLite and utilize abstract class <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper"><code>SQLiteOpenHelper</code></a> to create and manage our database in <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/dao/SQLiteDbCRUD.java"><code>SQLiteDbCRUD</code></a></li></ul><p><a href="https://camo.githubusercontent.com/ec41a0a744d6385ec99e31a07a1a7cc3827b08f0b9e949432a1bbf382ef8a91f/68747470733a2f2f692e696d6775722e636f6d2f556f32645169462e706e67"><img src="https://camo.githubusercontent.com/ec41a0a744d6385ec99e31a07a1a7cc3827b08f0b9e949432a1bbf382ef8a91f/68747470733a2f2f692e696d6775722e636f6d2f556f32645169462e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/f27bd91ecfc2407df21da9b5390865f920f4e98539ab1a61372f8d34d731decc/68747470733a2f2f692e696d6775722e636f6d2f757667593236592e706e67"><img src="https://camo.githubusercontent.com/f27bd91ecfc2407df21da9b5390865f920f4e98539ab1a61372f8d34d731decc/68747470733a2f2f692e696d6775722e636f6d2f757667593236592e706e67" alt="drawing"></a></p><ul><li>Adapter in<code>DatabaseAdapter</code><ul><li>using <strong>Adapter Design Pattern</strong> as main API for Recipe CRUD operations</li><li>using <strong>Singleton Design Pattern</strong> to create a single instance of our database to be shared within all activities</li></ul></li><li>Data Access Objects (DAO):<ul><li>provide an API for our app to set&#x2F;get data from SQLite database</li><li>map SQLite <code>Config</code> with corresponding model attributes</li><li><code>Config</code> is a nested class improving encapsulation since it is only used within <code>dao</code> package for CRUD operations <a href="https://camo.githubusercontent.com/ab0bbbe982ee75e8c1a4846edd3da3d0cc71cba3a496bd7478ff29912983e93d/68747470733a2f2f692e696d6775722e636f6d2f4d4c77735766532e706e67"><img src="https://camo.githubusercontent.com/ab0bbbe982ee75e8c1a4846edd3da3d0cc71cba3a496bd7478ff29912983e93d/68747470733a2f2f692e696d6775722e636f6d2f4d4c77735766532e706e67" alt="img"></a></li></ul></li></ul><h3 id="2-Activity"><a href="#2-Activity" class="headerlink" title="2. Activity"></a>2. Activity</h3><ul><li>Both <code>MainActivity</code> and <code>ViewRecipeActivity</code> inherits a <code>Toolbar</code> (explain in section B5a) from abstract class <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/activity/MenuActivity.java"><code>MenuActivity</code></a></li><li><code>MainActivity</code><ul><li>implements interface <code>BaseFragment.FragmentListener</code> that define blueprint for methods to:<ul><li>display recipe: <code>onShowRecipe</code> which navigates to <code>ViewRecipeActivity</code> (an <strong>Explicit Intent</strong>)</li><li>delete recipe: <code>onDeleteRecipe</code></li></ul></li><li>consists of 3 main views:<ul><li><code>ImageView</code> show background image for selected Cuisines</li><li><code>DrawerLayout</code> for <code>NavigationView</code> (explain in section B5b)</li><li><code>NestedScrollView</code> for displaying of recipes for different Cuisine Fragments (explain in section B4a) <a href="https://camo.githubusercontent.com/3abad28c86c495ef66c203e3b8e0b85d790231e75214bf6babedea7ff11329cd/68747470733a2f2f692e696d6775722e636f6d2f676e74644736622e706e67"><img src="https://camo.githubusercontent.com/3abad28c86c495ef66c203e3b8e0b85d790231e75214bf6babedea7ff11329cd/68747470733a2f2f692e696d6775722e636f6d2f676e74644736622e706e67" alt="img"></a></li></ul></li></ul></li><li><code>ViewRecipeActivity</code>:<ul><li>display chosen recipe from the data passed as parcel from <code>MainActivity</code></li><li>where <strong>HandsTracking</strong> feature (explain in section B3) is located</li></ul></li><li><code>CreateRecipeActivity</code><ul><li>implements 3 Recipe Create Fragment listener, each corresponding to 1 step in creating the recipe (explain in section B4b)</li><li>using <strong>Observer Design Pattern</strong>, changing Fragment when reaching subsequent step in creating Recipe <a href="https://camo.githubusercontent.com/ba495d01eb3fd14c04ab9a7e634b42ce99ada5309ade64d16e240094772d2f58/68747470733a2f2f692e696d6775722e636f6d2f4a51514d4672662e706e67"><img src="https://camo.githubusercontent.com/ba495d01eb3fd14c04ab9a7e634b42ce99ada5309ade64d16e240094772d2f58/68747470733a2f2f692e696d6775722e636f6d2f4a51514d4672662e706e67" alt="img"></a></li></ul></li></ul><h3 id="3-Hand-Tracking"><a href="#3-Hand-Tracking" class="headerlink" title="3. Hand Tracking"></a>3. Hand Tracking</h3><ul><li>This feature is implemented in <code>ViewRecipeActivity</code><ul><li>2 main Buttons <code>Start Tracking</code> and <code>Stop Tracking</code> to enable&#x2F;disable the feature, which open up a <code>glSurfaceView</code> in the <code>RelativeLayout at the bottom of the page</code></li><li><code>glSurfaceView</code> is an instance of <code>SolutionGlSurfaceView&lt;HandsResult&gt;</code> provided by Mediapipe Library, similar to <a href="https://en.wikipedia.org/wiki/Java_OpenGL">OpenGL</a> that allows writing words and drawing on webcam output.</li><li>we detect whether the index finger is pointing up or down and from there, post a <code>Runnable</code> to our <code>ScrollView</code> (that is displaying the Ingredients and Instructions) to perform a smooth scroll correspoding to the gesture. <a href="https://camo.githubusercontent.com/495aca4b8f5d6950563130c404646125d54242b2e3bab8d9e08951f5a16c1040/68747470733a2f2f692e696d6775722e636f6d2f514871456c696b2e706e67"><img src="https://camo.githubusercontent.com/495aca4b8f5d6950563130c404646125d54242b2e3bab8d9e08951f5a16c1040/68747470733a2f2f692e696d6775722e636f6d2f514871456c696b2e706e67" alt="drawing"></a></li></ul></li></ul><h3 id="4-Fragment"><a href="#4-Fragment" class="headerlink" title="4. Fragment"></a>4. Fragment</h3><h4 id="a-Cuisine-Fragment-under-fragment-home"><a href="#a-Cuisine-Fragment-under-fragment-home" class="headerlink" title="a. Cuisine Fragment under fragment/home"></a>a. Cuisine Fragment under <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/home"><code>fragment/home</code></a></h4><p><a href="https://camo.githubusercontent.com/f8363e12a5a22f5626044f9fbc61243e3f8a2cade25498748f7e3149e943fedb/68747470733a2f2f692e696d6775722e636f6d2f6766364759397a2e706e67"><img src="https://camo.githubusercontent.com/f8363e12a5a22f5626044f9fbc61243e3f8a2cade25498748f7e3149e943fedb/68747470733a2f2f692e696d6775722e636f6d2f6766364759397a2e706e67" alt="img"></a></p><ul><li>Both <code>ChineseFragment</code> and <code>VietnameseFragment</code> extends from abstract class <code>BaseFragment</code><ul><li>using <strong>Factory Design Pattern</strong> (<code>BaseFragment</code> is the factory, <code>ChineseFragment</code> and <code>VietnameseFragment</code> are the products) allow us to easily scale to multiple cuisines in the future</li><li>the only abstract method is <code>getFragmentLayout</code> that each product should define to generate its own correct fragment</li><li>both using <code>RecyclerView</code> to display its recipes (explain in section B5c)</li></ul></li></ul><h4 id="b-Recipe-Create-Fragment-under-fragment-recipe"><a href="#b-Recipe-Create-Fragment-under-fragment-recipe" class="headerlink" title="b. Recipe Create Fragment under fragment/recipe"></a>b. Recipe Create Fragment under <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/recipe"><code>fragment/recipe</code></a></h4><p><a href="https://camo.githubusercontent.com/c160347f4977d083446d9522068f8d09376b75a9c1e0225e13902aaf15a1d72d/68747470733a2f2f692e696d6775722e636f6d2f66303735666d6b2e706e67"><img src="https://camo.githubusercontent.com/c160347f4977d083446d9522068f8d09376b75a9c1e0225e13902aaf15a1d72d/68747470733a2f2f692e696d6775722e636f6d2f66303735666d6b2e706e67" alt="img"></a></p><ul><li>3 fragments correspond to 3 steps in creating a new Recipe:<ul><li><code>RecipeCreateImageFragment</code>: (1st step) to add image, description, choose meal type and time</li><li><code>RecipeCreateIngredientFragment</code>: (2nd step) to add ingredients</li><li><code>RecipeCreateInstructionFragment</code>: (3rd step) to add instructions</li></ul></li></ul><p><a href="https://camo.githubusercontent.com/e3feefa7060906cf963bb8a05d143af7ebb119e99f0af0a4ffae68e54e253f07/68747470733a2f2f692e696d6775722e636f6d2f304b724c5370642e706e67"><img src="https://camo.githubusercontent.com/e3feefa7060906cf963bb8a05d143af7ebb119e99f0af0a4ffae68e54e253f07/68747470733a2f2f692e696d6775722e636f6d2f304b724c5370642e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/d12d6d998b831b091f57ae4eab7f55f429cdce7aae50960c4dc4aa5a1ad7e064/68747470733a2f2f692e696d6775722e636f6d2f6c4d4a6b7275732e706e67"><img src="https://camo.githubusercontent.com/d12d6d998b831b091f57ae4eab7f55f429cdce7aae50960c4dc4aa5a1ad7e064/68747470733a2f2f692e696d6775722e636f6d2f6c4d4a6b7275732e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/7dcb09ad3fc3825cccbca6b8c65c3e7fe3b0c057a100eb6be54ff1938d3a4a11/68747470733a2f2f692e696d6775722e636f6d2f437a736e43704d2e706e67"><img src="https://camo.githubusercontent.com/7dcb09ad3fc3825cccbca6b8c65c3e7fe3b0c057a100eb6be54ff1938d3a4a11/68747470733a2f2f692e696d6775722e636f6d2f437a736e43704d2e706e67" alt="drawing"></a></p><ul><li>All 3 Create Recipe Fragments extends the abstract class <code>NavigableFragment</code> :<ul><li>blueprint for method <code>onNext</code> that define which fragment to navigate to after completing each creating new recipe step</li><li>using <strong>Template Method Design Pattern</strong> with <code>NavigableFragment</code> as the template</li></ul></li><li><code>RecipeCreateImageFragment</code> can access the local storage to upload new image for recipe (an <strong>Implicit Intent</strong>)</li></ul><h3 id="5-View-and-Layout"><a href="#5-View-and-Layout" class="headerlink" title="5. View and Layout"></a>5. View and Layout</h3><h4 id="a-Toolbar"><a href="#a-Toolbar" class="headerlink" title="a. Toolbar"></a>a. Toolbar</h4><ul><li>Both <code>MainActivity</code> and <code>ViewRecipeActivity</code> needs to define its own Toolbar according to the blueprint defined in the abstract class <code>MenuActivity</code></li><li><code>MainActivity</code> Toolbar:<ul><li>includes <code>NavigationView</code> (explain in section B5b below)</li><li>includes menu to add a “New recipe”</li></ul></li><li><code>ViewRecipeActivity</code>Toolbar:<ul><li>support <strong>Edit</strong> and <strong>Delete</strong> recipe functionalities</li></ul></li></ul><p><a href="https://camo.githubusercontent.com/4909fb08e3c5f8b9d5ca4c34fb4be64f94ffe25480df2ba895db9b6984f6117b/68747470733a2f2f692e696d6775722e636f6d2f3738664e304a4b2e706e67"><img src="https://camo.githubusercontent.com/4909fb08e3c5f8b9d5ca4c34fb4be64f94ffe25480df2ba895db9b6984f6117b/68747470733a2f2f692e696d6775722e636f6d2f3738664e304a4b2e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/bfc21f32b917be2d07c33f063a8a2f60a6b9353ce0201cd849bb0647f07aa343/68747470733a2f2f692e696d6775722e636f6d2f584358474e51532e706e67"><img src="https://camo.githubusercontent.com/bfc21f32b917be2d07c33f063a8a2f60a6b9353ce0201cd849bb0647f07aa343/68747470733a2f2f692e696d6775722e636f6d2f584358474e51532e706e67" alt="drawing"></a></p><h4 id="b-Navigation-View-and-DrawerLayout"><a href="#b-Navigation-View-and-DrawerLayout" class="headerlink" title="b. Navigation View and DrawerLayout"></a>b. Navigation View and DrawerLayout</h4><ul><li>make use of a <code>switch</code> case to switch to a different cuisine inside <code>MainActivity</code></li><li>once a new cuisine is selected, the corresponding Fragment (<code>ChineseFragment</code> or <code>VietnameseFragment</code>) will be added into <code>NestedScrollView</code> to show recipe <code>CardView</code></li></ul><p><a href="https://camo.githubusercontent.com/5999c15ea935afb0f770e613c479ec2efc7851c36c9310828c52d7c2ed1f4662/68747470733a2f2f692e696d6775722e636f6d2f483975595858572e706e67"><img src="https://camo.githubusercontent.com/5999c15ea935afb0f770e613c479ec2efc7851c36c9310828c52d7c2ed1f4662/68747470733a2f2f692e696d6775722e636f6d2f483975595858572e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/5c900aad16fe7c056c2d56c739c40655c21a3f26fabeb640f7660474366d78f4/68747470733a2f2f692e696d6775722e636f6d2f3378546a5734342e706e67"><img src="https://camo.githubusercontent.com/5c900aad16fe7c056c2d56c739c40655c21a3f26fabeb640f7660474366d78f4/68747470733a2f2f692e696d6775722e636f6d2f3378546a5734342e706e67" alt="drawing"></a></p><h4 id="c-RecyclerView"><a href="#c-RecyclerView" class="headerlink" title="c. RecyclerView"></a>c. RecyclerView</h4><ul><li>We user <code>RecyclerView</code> at 2 places:<ul><li>to display recipes in the Cuisine Fragment (<code>BaseFragment</code>)</li><li>to display the added ingredients and instructions when creating new recipe in Recipe Create Fragment</li></ul></li><li>To implement <code>RecyclerView</code> we need to implement the corresponding adapter as shown in <code>adapter/recipe</code> (Adapter Design Pattern)<ul><li>the 3 main functions in each adapter to override are:<ul><li><code>onCreateViewHolder</code> that inflate a new view in the parent layout to allow for display of listed items</li><li><code>onBindViewHolder</code> that binds the data to be displayed in as listed items</li><li><code>getItemCount</code> that return the size of all the items to be displayed</li></ul></li><li>in the corresponding Fragment, before we set the above adapter, we also need to set a <code>LinearLayoutManager</code> for the <code>RecyclerView</code> to reside in</li><li>code examples:</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">private RecyclerView instructionRecyclerView;instructionRecyclerView.setHasFixedSize(true);instructionRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));instructionRecyclerView.setAdapter(instructionAdapter);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="C-Appendix"><a href="#C-Appendix" class="headerlink" title="C. Appendix"></a>C. Appendix</h2><h3 id="0-Reference"><a href="#0-Reference" class="headerlink" title="0. Reference:"></a>0. Reference:</h3><ul><li>We made use of a some very useful Youtube tutorials + Github repos to build a normal Cooking Recipe app before adding modifications and our hand tracking feature:<ul><li><a href="https://www.youtube.com/watch?v=6-891CSz6v0">Coding with Evan</a></li><li><a href="https://www.youtube.com/watch?v=Pe5dlibIMG8&list=PLPIUB9tHYMdvnKejGY-ggulrkgj6cBb4S">Muhammad Shahid Niazi</a></li><li><a href="https://github.com/aza0092/Cooking-Recipe-Android-App">aza0092&#x2F;Cooking-Recipe-Android-App</a></li></ul></li></ul><h3 id="1-User-Story-Development"><a href="#1-User-Story-Development" class="headerlink" title="1. User Story Development"></a>1. User Story Development</h3><ul><li>BDD: Behaviour-Driven Design <a href="https://camo.githubusercontent.com/ace900256618d376a289d94c52b4ee129856488dc95b1532b5445bdd9a5fe8e9/68747470733a2f2f692e696d6775722e636f6d2f4c585a315a4c622e706e67"><img src="https://camo.githubusercontent.com/ace900256618d376a289d94c52b4ee129856488dc95b1532b5445bdd9a5fe8e9/68747470733a2f2f692e696d6775722e636f6d2f4c585a315a4c622e706e67" alt="img"></a> <a href="https://camo.githubusercontent.com/8e77afe7761d1c752b456b8dd6b02a9287eeeb2556bf67eebfd75cb8eab532b4/68747470733a2f2f692e696d6775722e636f6d2f4c61555135785a2e706e67"><img src="https://camo.githubusercontent.com/8e77afe7761d1c752b456b8dd6b02a9287eeeb2556bf67eebfd75cb8eab532b4/68747470733a2f2f692e696d6775722e636f6d2f4c61555135785a2e706e67" alt="img"></a></li><li>SMART User Stories: <strong>Specific, Measurable, Achievable, Relevant, and Time- boxed</strong> <a href="https://camo.githubusercontent.com/e088ec71ba5eeaf04f2ea9aa4eb5d1c7b17eb3474b5babff5543d718e0336b3b/68747470733a2f2f692e696d6775722e636f6d2f4644374d7373662e6a7067"><img src="https://camo.githubusercontent.com/e088ec71ba5eeaf04f2ea9aa4eb5d1c7b17eb3474b5babff5543d718e0336b3b/68747470733a2f2f692e696d6775722e636f6d2f4644374d7373662e6a7067" alt="img"></a> <a href="https://camo.githubusercontent.com/75a1f3cc1e754104f589d7546daf2581f7189189971428a45e12c60d68d09980/68747470733a2f2f692e696d6775722e636f6d2f396679714946662e6a7067"><img src="https://camo.githubusercontent.com/75a1f3cc1e754104f589d7546daf2581f7189189971428a45e12c60d68d09980/68747470733a2f2f692e696d6775722e636f6d2f396679714946662e6a7067" alt="img"></a> <a href="https://camo.githubusercontent.com/cd8254e3430cf6a97691ea6f8c46fbd5b8b0d74298715181072135a7b52ee840/68747470733a2f2f692e696d6775722e636f6d2f6d6f64657671642e706e67"><img src="https://camo.githubusercontent.com/cd8254e3430cf6a97691ea6f8c46fbd5b8b0d74298715181072135a7b52ee840/68747470733a2f2f692e696d6775722e636f6d2f6d6f64657671642e706e67" alt="img"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android app development </tag>
            
            <tag> Design patterns </tag>
            
            <tag> Data Base </tag>
            
            <tag> Hand Detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux folder</title>
      <link href="/liangjunyi.github.io/2022/05/16/linux-folder/"/>
      <url>/liangjunyi.github.io/2022/05/16/linux-folder/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/05/18/mg3tS84BlbPRMHv.png" alt="image-20220518141155115"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/liangjunyi.github.io/2022/05/16/hello-world/"/>
      <url>/liangjunyi.github.io/2022/05/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
