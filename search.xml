<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Open an app in Linux</title>
      <link href="/liangjunyi.github.io/2022/05/19/open-an-app-in-linux/"/>
      <url>/liangjunyi.github.io/2022/05/19/open-an-app-in-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Open-an-app-in-Linux"><a href="#Open-an-app-in-Linux" class="headerlink" title="Open an app in Linux"></a>Open an app in Linux</h1><h2 id="Open-app"><a href="#Open-app" class="headerlink" title="Open app"></a>Open app</h2><p>For example open firefox, we can type in terminal </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">firefox $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><ul><li>no need go to specific folder, can directly type this command in the terminal</li><li>The reason add <code>&amp;</code> at end is aim to run firefox at backend, so that the terminal will not be occupied by Firefox</li><li>if you forget type <code>&amp;</code>, you can type <code>Ctrl+Z</code> and then type <code>bg</code> and return.</li></ul></blockquote><h2 id="Close-app"><a href="#Close-app" class="headerlink" title="Close app"></a>Close app</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>show the currently running process</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> aux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>is to show all the currently running process and their state</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>it means search</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> evince<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>search for evince process</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> evince     <span class="token comment">#查到evince的进程</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>|:管道符号,command1 |command2,将command1输出结果通过管道作为command2命令的输入参数.</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">kill</span> -s <span class="token number">9</span> pid   <span class="token comment">#杀死进程号为PID的进程，例如：kill -9 6705</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Some-commands"><a href="#Some-commands" class="headerlink" title="Some commands"></a>Some commands</h2><h3 id="ps命令-Process-Status"><a href="#ps命令-Process-Status" class="headerlink" title="ps命令 (Process Status)"></a>ps命令 (Process Status)</h3><p><code>ps aux</code>‘output format</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token environment constant">USER</span> PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>格式说明：</p><ul><li><p>USER: 行程拥有者</p></li><li><p>PID: pid</p></li><li><p>%CPU: 占用的 CPU 使用率</p></li><li><p>%MEM: 占用的记忆体使用率</p></li><li><p>VSZ: 占用的虚拟记忆体大小</p></li><li><p>RSS: 占用的记忆体大小</p></li><li><p>TTY: 终端的次要装置号码 (minor device number of tty)</p></li><li><p>STAT: 该行程的状态，linux的进程有5种状态：</p><ul><li><p>D 不可中断 uninterruptible sleep (usually IO)  (收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</p></li><li><p>R 运行 runnable (on run queue)      (正在运行或在运行队列中等待)</p></li><li><p>S 中断 sleeping     (休眠中, 受阻, 在等待某个条件的形成或接受到信号)</p></li><li><p>T 停止 traced or stopped    (进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)</p></li><li><p>Z 僵死 a defunct (”zombie”) process   (进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)</p></li><li><p>注: 其它状态还包括W(无驻留页), &lt;(高优先级进程), N(低优先级进程), L(内存锁页).</p></li></ul></li><li><p>START: 进程开始时间</p></li><li><p>TIME: 执行的时间</p></li><li><p>COMMAND:所执行的指令</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA Game Machine Project</title>
      <link href="/liangjunyi.github.io/2022/05/18/fpga-game-machine-project/"/>
      <url>/liangjunyi.github.io/2022/05/18/fpga-game-machine-project/</url>
      
        <content type="html"><![CDATA[<h1 id="Prezzer"><a href="#Prezzer" class="headerlink" title="Prezzer"></a>Prezzer</h1><h3 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement"></a>Acknowledgement</h3><ul><li>Tran Nguyen Bao Long</li><li>Kat Yong Jie</li><li>Liang Junyi</li><li>Wang Zhuoran</li><li>Lu Mingrui</li><li>Han Jin</li><li>Sun Zhengnan</li><li>Yang Haocheng</li></ul><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>For our 50.002 project, we have created a single-player game called Prezzer. The objective of the game is to score the highest amount of points possible before the 30 seconds count down and avoid pressing the wrong button.</p><p>This is a game whereby the player must observe a matrix of LED lights, this LED matrix consists of three columns and four rows and there are 3 different coloured lights: red, green and blue player need to press different times to clear different color LED: red 3 times, green 2 times and red 1 times, and each row only lights one LED, Player need to press the right buttons based on the LED light at the lowest level with the corresponding colors and position.</p><p>The coloured LED will move down after we press the button correctly from the top to the bottom. If the player presses the wrong button. The game ends if the player presses the wrong button or runs out of time, and the final score will be displayed on the 7 seg on the top left of the game and time left will be displayed on the 7 seg on the top right of the game.</p><h3 id="How-to-play"><a href="#How-to-play" class="headerlink" title="How to play"></a>How to play</h3><ol><li>Press RESET button to start</li><li>Colored tiles will be randomly generated on the three columns</li><li>Press button below corresponding column</li><li>Clear as many tiles as you can within 30 seconds and get the max score</li><li>Pressing a button for the wrong column will mean game over.</li></ol><h3 id="Tiles-scores"><a href="#Tiles-scores" class="headerlink" title="Tiles scores"></a>Tiles scores</h3><ul><li>Red: 3 presses &#x3D; 3 points</li><li>Green: 2 presses &#x3D; 2 points</li><li>Blue: 1 press &#x3D; 1 point</li></ul><p>Red turns to Green turns to Blue CLEAR for each correct press</p><h3 id="ALU-Function"><a href="#ALU-Function" class="headerlink" title="ALU Function"></a>ALU Function</h3><table><thead><tr><th>Operation</th><th>ALUFN</th><th>Decimal</th></tr></thead><tbody><tr><td>ADD</td><td>0000</td><td>0</td></tr><tr><td>SUB</td><td>0001</td><td>1</td></tr><tr><td>MUL (extra)</td><td>0010</td><td>2</td></tr><tr><td>CMPEQ</td><td>0011</td><td>3</td></tr><tr><td>CMPLT</td><td>0100</td><td>4</td></tr><tr><td>CMPLE</td><td>0101</td><td>5</td></tr><tr><td>AND</td><td>0110</td><td>6</td></tr><tr><td>OR</td><td>0111</td><td>7</td></tr><tr><td>XOR</td><td>1000</td><td>8</td></tr><tr><td>A</td><td>1001</td><td>9</td></tr><tr><td>SHL</td><td>1010</td><td>10</td></tr><tr><td>SHR</td><td>1011</td><td>11</td></tr><tr><td>SRA</td><td>1100</td><td>12</td></tr><tr><td>SHD(extra)</td><td>1101</td><td>13</td></tr><tr><td>B(extra)</td><td>1110</td><td>14</td></tr><tr><td>ENQ(extra)</td><td>1111</td><td>15</td></tr></tbody></table><h3 id="Finite-State-Machine"><a href="#Finite-State-Machine" class="headerlink" title="Finite State Machine"></a>Finite State Machine</h3><p><img src="https://s2.loli.net/2022/05/18/9SUiIrtzADcaMw3.png" alt="image-20220518162522273"></p><h3 id="Datapath"><a href="#Datapath" class="headerlink" title="Datapath"></a>Datapath</h3><p><img src="https://s2.loli.net/2022/05/18/WgMfF9HcGOLhiDV.png" alt="image-20220518162707353"></p><h3 id="Game-Video"><a href="#Game-Video" class="headerlink" title="Game Video"></a>Game Video</h3><p><a href="https://drive.google.com/drive/folders/1I1gZKp6AiTt99a2aXB55q5OHeVtaDIEL">https://drive.google.com/drive/folders/1I1gZKp6AiTt99a2aXB55q5OHeVtaDIEL</a></p>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPGA </tag>
            
            <tag> Finite State Machine </tag>
            
            <tag> Datapath </tag>
            
            <tag> Arithmetic Logic Unit (ALU) </tag>
            
            <tag> IO control </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android App</title>
      <link href="/liangjunyi.github.io/2022/05/18/android-app-project/"/>
      <url>/liangjunyi.github.io/2022/05/18/android-app-project/</url>
      
        <content type="html"><![CDATA[<h1 id="Touchless-Chef"><a href="#Touchless-Chef" class="headerlink" title="Touchless Chef"></a>Touchless Chef</h1><blockquote><p><a href="https://istd.sutd.edu.sg/undergraduate/courses/50001-information-systems-programming">50.001</a> 1D Project</p><p>A POC Recipe Android Application using Google Mediapipe Hands Tracking model for smart touchless scrolling.</p><p>Deliverables:</p><ul><li>Download and install our <code>.apk</code> <a href="https://drive.google.com/file/d/13otJ7cr-M_WNgoN18USStgj5GLp90yvS/view?usp=sharing"><em><strong>HERE</strong></em></a> to try it out</li><li><a href="https://drive.google.com/file/d/1CY5GiMf-hH6lPLB7P39XUdJx_tyvs2Lg/view">Slides</a></li><li><a href="https://drive.google.com/file/d/1Y4r8ZRK22YiWPUSEJxjkPF3D8pMjsIxF/view?usp=sharing">Poster</a></li><li><a href="https://drive.google.com/file/d/1eMMJQq2ctQO_Nt-fLtD9gfOnbFEruVBF/view?usp=sharing">Video</a></li></ul></blockquote><h2 id="A-Acknowledgement"><a href="#A-Acknowledgement" class="headerlink" title="A. Acknowledgement:"></a>A. Acknowledgement:</h2><ul><li><p>Tran Nguyen Bao Long</p><p>@TNBL</p><p>: Project Lead</p><ul><li>define software architecture</li><li>documentation</li></ul></li><li><p>Li Xueqing</p><p>@cnmnrll</p><p>: Project Design</p><ul><li>set basic <code>Recipe</code>, <code>Ingredients</code> and <code>Instructions</code> models <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/model"><code>model</code></a></li><li>documentation</li></ul></li><li><p>Melodie Chew En Qi</p><p>@melmelchew</p><p>: Marketing + Frontend</p><ul><li><code>RecyclerView</code> and <code>NavigationView</code></li><li><a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/adapter/recipe"><code>adapter</code></a> for <code>RecyclerView</code></li></ul></li><li><p>Melvin Lim Boon Han</p><p>@melvinlimbh</p><p>: Marketing + Frontend</p><ul><li>Fragments for different cuisines <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/home"><code>home</code></a></li><li>Fragments for creating recipes <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/recipe">RecipeCreate</a></li><li>all resources and layouts <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/res"><code>res</code></a></li></ul></li><li><p>Han Jin</p><p>@dlmszhhh</p><p>: Backend Acitivity</p><ul><li>basic recipe activities <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/activity"><code>acitivity</code></a></li></ul></li><li><p>Wang Zhouran</p><p>@wzrwzr23</p><p>: Backend Database</p><ul><li>setup <code>SQLite</code> database and corresponding Data Access Objects <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/dao"><code>dao</code></a> and <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/adapter/DatabaseAdapter.java"><code>adapter</code></a></li></ul></li><li><p>Liang Junyi</p><p>@LiangJunyi-010</p><p>Backend HandTracking</p><ul><li>implement HandTracking using Google Mediapipe <a href="https://google.github.io/mediapipe/solutions/hands.html"><strong>Hands model</strong></a> for touchless scrolling in <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/activity/recipe/ViewRecipeActivity.java"><code>ViewRecipeActivity</code></a></li></ul></li></ul><h2 id="B-Description"><a href="#B-Description" class="headerlink" title="B. Description"></a>B. Description</h2><blockquote><p>Overview of Design Pattern used:</p><ul><li><strong>Adapter Design Pattern</strong> (for SQLite database and RecyclerView)</li><li><strong>Singleton Design Pattern</strong> (for SQLite database)</li><li><strong>Observer Design Pattern</strong> (for <code>CreateRecipeActivity</code>)</li><li><strong>Factory Design Pattern</strong> (for Cuisine Fragment)</li><li><strong>Template Method Design Pattern</strong> (for Create Recipe Fragment)</li></ul></blockquote><h3 id="0-Model"><a href="#0-Model" class="headerlink" title="0. Model"></a>0. <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/model">Model</a></h3><ul><li>Utilize<code>Parcelable</code>interface:<ul><li>speed up data transfer using Java Serializable</li><li>easily pass data as <code>Bundle</code> object through Activity</li></ul></li><li>Recipe :<ul><li><code>id</code>: primary key for SQLite</li><li><code>name</code>: name of recipe</li><li><code>description</code>: short description of recipe</li><li><code>category</code>: category&#x2F;cuisine (Vietnamese&#x2F;Chinese)</li><li><code>mealType</code>: type of meals (Breakfast, Dinner,…)</li><li><code>time</code>: estimated to prepare the dish</li><li><code>imagePath</code>: local URI path to Recipe image</li><li><code>ingredients</code>: list of ingredients</li><li><code>instructions</code>: list of instructions</li></ul></li><li>Instruction :<ul><li><code>id</code>: primary key for SQLite</li><li><code>recipeID</code>: foreign key</li><li><code>content</code>: instruction body</li></ul></li><li>Ingredient :<ul><li><code>id</code>: primary key for SQLite</li><li><code>recipeID</code>: foreign key</li><li><code>name</code>: ingredient name <a href="https://camo.githubusercontent.com/797e593a78147ad691b2d046e1b76426c063283092763db6a8c7566d7b6ffb21/68747470733a2f2f692e696d6775722e636f6d2f594f4c374f756a2e706e67"><img src="https://camo.githubusercontent.com/797e593a78147ad691b2d046e1b76426c063283092763db6a8c7566d7b6ffb21/68747470733a2f2f692e696d6775722e636f6d2f594f4c374f756a2e706e67" alt="img"></a></li></ul></li></ul><h3 id="1-Database"><a href="#1-Database" class="headerlink" title="1. Database"></a>1. Database</h3><ul><li>We use local database SQLite and utilize abstract class <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper"><code>SQLiteOpenHelper</code></a> to create and manage our database in <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/dao/SQLiteDbCRUD.java"><code>SQLiteDbCRUD</code></a></li></ul><p><a href="https://camo.githubusercontent.com/ec41a0a744d6385ec99e31a07a1a7cc3827b08f0b9e949432a1bbf382ef8a91f/68747470733a2f2f692e696d6775722e636f6d2f556f32645169462e706e67"><img src="https://camo.githubusercontent.com/ec41a0a744d6385ec99e31a07a1a7cc3827b08f0b9e949432a1bbf382ef8a91f/68747470733a2f2f692e696d6775722e636f6d2f556f32645169462e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/f27bd91ecfc2407df21da9b5390865f920f4e98539ab1a61372f8d34d731decc/68747470733a2f2f692e696d6775722e636f6d2f757667593236592e706e67"><img src="https://camo.githubusercontent.com/f27bd91ecfc2407df21da9b5390865f920f4e98539ab1a61372f8d34d731decc/68747470733a2f2f692e696d6775722e636f6d2f757667593236592e706e67" alt="drawing"></a></p><ul><li>Adapter in<code>DatabaseAdapter</code><ul><li>using <strong>Adapter Design Pattern</strong> as main API for Recipe CRUD operations</li><li>using <strong>Singleton Design Pattern</strong> to create a single instance of our database to be shared within all activities</li></ul></li><li>Data Access Objects (DAO):<ul><li>provide an API for our app to set&#x2F;get data from SQLite database</li><li>map SQLite <code>Config</code> with corresponding model attributes</li><li><code>Config</code> is a nested class improving encapsulation since it is only used within <code>dao</code> package for CRUD operations <a href="https://camo.githubusercontent.com/ab0bbbe982ee75e8c1a4846edd3da3d0cc71cba3a496bd7478ff29912983e93d/68747470733a2f2f692e696d6775722e636f6d2f4d4c77735766532e706e67"><img src="https://camo.githubusercontent.com/ab0bbbe982ee75e8c1a4846edd3da3d0cc71cba3a496bd7478ff29912983e93d/68747470733a2f2f692e696d6775722e636f6d2f4d4c77735766532e706e67" alt="img"></a></li></ul></li></ul><h3 id="2-Activity"><a href="#2-Activity" class="headerlink" title="2. Activity"></a>2. Activity</h3><ul><li>Both <code>MainActivity</code> and <code>ViewRecipeActivity</code> inherits a <code>Toolbar</code> (explain in section B5a) from abstract class <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/activity/MenuActivity.java"><code>MenuActivity</code></a></li><li><code>MainActivity</code><ul><li>implements interface <code>BaseFragment.FragmentListener</code> that define blueprint for methods to:<ul><li>display recipe: <code>onShowRecipe</code> which navigates to <code>ViewRecipeActivity</code> (an <strong>Explicit Intent</strong>)</li><li>delete recipe: <code>onDeleteRecipe</code></li></ul></li><li>consists of 3 main views:<ul><li><code>ImageView</code> show background image for selected Cuisines</li><li><code>DrawerLayout</code> for <code>NavigationView</code> (explain in section B5b)</li><li><code>NestedScrollView</code> for displaying of recipes for different Cuisine Fragments (explain in section B4a) <a href="https://camo.githubusercontent.com/3abad28c86c495ef66c203e3b8e0b85d790231e75214bf6babedea7ff11329cd/68747470733a2f2f692e696d6775722e636f6d2f676e74644736622e706e67"><img src="https://camo.githubusercontent.com/3abad28c86c495ef66c203e3b8e0b85d790231e75214bf6babedea7ff11329cd/68747470733a2f2f692e696d6775722e636f6d2f676e74644736622e706e67" alt="img"></a></li></ul></li></ul></li><li><code>ViewRecipeActivity</code>:<ul><li>display chosen recipe from the data passed as parcel from <code>MainActivity</code></li><li>where <strong>HandsTracking</strong> feature (explain in section B3) is located</li></ul></li><li><code>CreateRecipeActivity</code><ul><li>implements 3 Recipe Create Fragment listener, each corresponding to 1 step in creating the recipe (explain in section B4b)</li><li>using <strong>Observer Design Pattern</strong>, changing Fragment when reaching subsequent step in creating Recipe <a href="https://camo.githubusercontent.com/ba495d01eb3fd14c04ab9a7e634b42ce99ada5309ade64d16e240094772d2f58/68747470733a2f2f692e696d6775722e636f6d2f4a51514d4672662e706e67"><img src="https://camo.githubusercontent.com/ba495d01eb3fd14c04ab9a7e634b42ce99ada5309ade64d16e240094772d2f58/68747470733a2f2f692e696d6775722e636f6d2f4a51514d4672662e706e67" alt="img"></a></li></ul></li></ul><h3 id="3-Hand-Tracking"><a href="#3-Hand-Tracking" class="headerlink" title="3. Hand Tracking"></a>3. Hand Tracking</h3><ul><li>This feature is implemented in <code>ViewRecipeActivity</code><ul><li>2 main Buttons <code>Start Tracking</code> and <code>Stop Tracking</code> to enable&#x2F;disable the feature, which open up a <code>glSurfaceView</code> in the <code>RelativeLayout at the bottom of the page</code></li><li><code>glSurfaceView</code> is an instance of <code>SolutionGlSurfaceView&lt;HandsResult&gt;</code> provided by Mediapipe Library, similar to <a href="https://en.wikipedia.org/wiki/Java_OpenGL">OpenGL</a> that allows writing words and drawing on webcam output.</li><li>we detect whether the index finger is pointing up or down and from there, post a <code>Runnable</code> to our <code>ScrollView</code> (that is displaying the Ingredients and Instructions) to perform a smooth scroll correspoding to the gesture. <a href="https://camo.githubusercontent.com/495aca4b8f5d6950563130c404646125d54242b2e3bab8d9e08951f5a16c1040/68747470733a2f2f692e696d6775722e636f6d2f514871456c696b2e706e67"><img src="https://camo.githubusercontent.com/495aca4b8f5d6950563130c404646125d54242b2e3bab8d9e08951f5a16c1040/68747470733a2f2f692e696d6775722e636f6d2f514871456c696b2e706e67" alt="drawing"></a></li></ul></li></ul><h3 id="4-Fragment"><a href="#4-Fragment" class="headerlink" title="4. Fragment"></a>4. Fragment</h3><h4 id="a-Cuisine-Fragment-under-fragment-home"><a href="#a-Cuisine-Fragment-under-fragment-home" class="headerlink" title="a. Cuisine Fragment under fragment/home"></a>a. Cuisine Fragment under <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/home"><code>fragment/home</code></a></h4><p><a href="https://camo.githubusercontent.com/f8363e12a5a22f5626044f9fbc61243e3f8a2cade25498748f7e3149e943fedb/68747470733a2f2f692e696d6775722e636f6d2f6766364759397a2e706e67"><img src="https://camo.githubusercontent.com/f8363e12a5a22f5626044f9fbc61243e3f8a2cade25498748f7e3149e943fedb/68747470733a2f2f692e696d6775722e636f6d2f6766364759397a2e706e67" alt="img"></a></p><ul><li>Both <code>ChineseFragment</code> and <code>VietnameseFragment</code> extends from abstract class <code>BaseFragment</code><ul><li>using <strong>Factory Design Pattern</strong> (<code>BaseFragment</code> is the factory, <code>ChineseFragment</code> and <code>VietnameseFragment</code> are the products) allow us to easily scale to multiple cuisines in the future</li><li>the only abstract method is <code>getFragmentLayout</code> that each product should define to generate its own correct fragment</li><li>both using <code>RecyclerView</code> to display its recipes (explain in section B5c)</li></ul></li></ul><h4 id="b-Recipe-Create-Fragment-under-fragment-recipe"><a href="#b-Recipe-Create-Fragment-under-fragment-recipe" class="headerlink" title="b. Recipe Create Fragment under fragment/recipe"></a>b. Recipe Create Fragment under <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/recipe"><code>fragment/recipe</code></a></h4><p><a href="https://camo.githubusercontent.com/c160347f4977d083446d9522068f8d09376b75a9c1e0225e13902aaf15a1d72d/68747470733a2f2f692e696d6775722e636f6d2f66303735666d6b2e706e67"><img src="https://camo.githubusercontent.com/c160347f4977d083446d9522068f8d09376b75a9c1e0225e13902aaf15a1d72d/68747470733a2f2f692e696d6775722e636f6d2f66303735666d6b2e706e67" alt="img"></a></p><ul><li>3 fragments correspond to 3 steps in creating a new Recipe:<ul><li><code>RecipeCreateImageFragment</code>: (1st step) to add image, description, choose meal type and time</li><li><code>RecipeCreateIngredientFragment</code>: (2nd step) to add ingredients</li><li><code>RecipeCreateInstructionFragment</code>: (3rd step) to add instructions</li></ul></li></ul><p><a href="https://camo.githubusercontent.com/e3feefa7060906cf963bb8a05d143af7ebb119e99f0af0a4ffae68e54e253f07/68747470733a2f2f692e696d6775722e636f6d2f304b724c5370642e706e67"><img src="https://camo.githubusercontent.com/e3feefa7060906cf963bb8a05d143af7ebb119e99f0af0a4ffae68e54e253f07/68747470733a2f2f692e696d6775722e636f6d2f304b724c5370642e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/d12d6d998b831b091f57ae4eab7f55f429cdce7aae50960c4dc4aa5a1ad7e064/68747470733a2f2f692e696d6775722e636f6d2f6c4d4a6b7275732e706e67"><img src="https://camo.githubusercontent.com/d12d6d998b831b091f57ae4eab7f55f429cdce7aae50960c4dc4aa5a1ad7e064/68747470733a2f2f692e696d6775722e636f6d2f6c4d4a6b7275732e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/7dcb09ad3fc3825cccbca6b8c65c3e7fe3b0c057a100eb6be54ff1938d3a4a11/68747470733a2f2f692e696d6775722e636f6d2f437a736e43704d2e706e67"><img src="https://camo.githubusercontent.com/7dcb09ad3fc3825cccbca6b8c65c3e7fe3b0c057a100eb6be54ff1938d3a4a11/68747470733a2f2f692e696d6775722e636f6d2f437a736e43704d2e706e67" alt="drawing"></a></p><ul><li>All 3 Create Recipe Fragments extends the abstract class <code>NavigableFragment</code> :<ul><li>blueprint for method <code>onNext</code> that define which fragment to navigate to after completing each creating new recipe step</li><li>using <strong>Template Method Design Pattern</strong> with <code>NavigableFragment</code> as the template</li></ul></li><li><code>RecipeCreateImageFragment</code> can access the local storage to upload new image for recipe (an <strong>Implicit Intent</strong>)</li></ul><h3 id="5-View-and-Layout"><a href="#5-View-and-Layout" class="headerlink" title="5. View and Layout"></a>5. View and Layout</h3><h4 id="a-Toolbar"><a href="#a-Toolbar" class="headerlink" title="a. Toolbar"></a>a. Toolbar</h4><ul><li>Both <code>MainActivity</code> and <code>ViewRecipeActivity</code> needs to define its own Toolbar according to the blueprint defined in the abstract class <code>MenuActivity</code></li><li><code>MainActivity</code> Toolbar:<ul><li>includes <code>NavigationView</code> (explain in section B5b below)</li><li>includes menu to add a “New recipe”</li></ul></li><li><code>ViewRecipeActivity</code>Toolbar:<ul><li>support <strong>Edit</strong> and <strong>Delete</strong> recipe functionalities</li></ul></li></ul><p><a href="https://camo.githubusercontent.com/4909fb08e3c5f8b9d5ca4c34fb4be64f94ffe25480df2ba895db9b6984f6117b/68747470733a2f2f692e696d6775722e636f6d2f3738664e304a4b2e706e67"><img src="https://camo.githubusercontent.com/4909fb08e3c5f8b9d5ca4c34fb4be64f94ffe25480df2ba895db9b6984f6117b/68747470733a2f2f692e696d6775722e636f6d2f3738664e304a4b2e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/bfc21f32b917be2d07c33f063a8a2f60a6b9353ce0201cd849bb0647f07aa343/68747470733a2f2f692e696d6775722e636f6d2f584358474e51532e706e67"><img src="https://camo.githubusercontent.com/bfc21f32b917be2d07c33f063a8a2f60a6b9353ce0201cd849bb0647f07aa343/68747470733a2f2f692e696d6775722e636f6d2f584358474e51532e706e67" alt="drawing"></a></p><h4 id="b-Navigation-View-and-DrawerLayout"><a href="#b-Navigation-View-and-DrawerLayout" class="headerlink" title="b. Navigation View and DrawerLayout"></a>b. Navigation View and DrawerLayout</h4><ul><li>make use of a <code>switch</code> case to switch to a different cuisine inside <code>MainActivity</code></li><li>once a new cuisine is selected, the corresponding Fragment (<code>ChineseFragment</code> or <code>VietnameseFragment</code>) will be added into <code>NestedScrollView</code> to show recipe <code>CardView</code></li></ul><p><a href="https://camo.githubusercontent.com/5999c15ea935afb0f770e613c479ec2efc7851c36c9310828c52d7c2ed1f4662/68747470733a2f2f692e696d6775722e636f6d2f483975595858572e706e67"><img src="https://camo.githubusercontent.com/5999c15ea935afb0f770e613c479ec2efc7851c36c9310828c52d7c2ed1f4662/68747470733a2f2f692e696d6775722e636f6d2f483975595858572e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/5c900aad16fe7c056c2d56c739c40655c21a3f26fabeb640f7660474366d78f4/68747470733a2f2f692e696d6775722e636f6d2f3378546a5734342e706e67"><img src="https://camo.githubusercontent.com/5c900aad16fe7c056c2d56c739c40655c21a3f26fabeb640f7660474366d78f4/68747470733a2f2f692e696d6775722e636f6d2f3378546a5734342e706e67" alt="drawing"></a></p><h4 id="c-RecyclerView"><a href="#c-RecyclerView" class="headerlink" title="c. RecyclerView"></a>c. RecyclerView</h4><ul><li>We user <code>RecyclerView</code> at 2 places:<ul><li>to display recipes in the Cuisine Fragment (<code>BaseFragment</code>)</li><li>to display the added ingredients and instructions when creating new recipe in Recipe Create Fragment</li></ul></li><li>To implement <code>RecyclerView</code> we need to implement the corresponding adapter as shown in <code>adapter/recipe</code> (Adapter Design Pattern)<ul><li>the 3 main functions in each adapter to override are:<ul><li><code>onCreateViewHolder</code> that inflate a new view in the parent layout to allow for display of listed items</li><li><code>onBindViewHolder</code> that binds the data to be displayed in as listed items</li><li><code>getItemCount</code> that return the size of all the items to be displayed</li></ul></li><li>in the corresponding Fragment, before we set the above adapter, we also need to set a <code>LinearLayoutManager</code> for the <code>RecyclerView</code> to reside in</li><li>code examples:</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">private RecyclerView instructionRecyclerView;instructionRecyclerView.setHasFixedSize(true);instructionRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));instructionRecyclerView.setAdapter(instructionAdapter);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="C-Appendix"><a href="#C-Appendix" class="headerlink" title="C. Appendix"></a>C. Appendix</h2><h3 id="0-Reference"><a href="#0-Reference" class="headerlink" title="0. Reference:"></a>0. Reference:</h3><ul><li>We made use of a some very useful Youtube tutorials + Github repos to build a normal Cooking Recipe app before adding modifications and our hand tracking feature:<ul><li><a href="https://www.youtube.com/watch?v=6-891CSz6v0">Coding with Evan</a></li><li><a href="https://www.youtube.com/watch?v=Pe5dlibIMG8&list=PLPIUB9tHYMdvnKejGY-ggulrkgj6cBb4S">Muhammad Shahid Niazi</a></li><li><a href="https://github.com/aza0092/Cooking-Recipe-Android-App">aza0092&#x2F;Cooking-Recipe-Android-App</a></li></ul></li></ul><h3 id="1-User-Story-Development"><a href="#1-User-Story-Development" class="headerlink" title="1. User Story Development"></a>1. User Story Development</h3><ul><li>BDD: Behaviour-Driven Design <a href="https://camo.githubusercontent.com/ace900256618d376a289d94c52b4ee129856488dc95b1532b5445bdd9a5fe8e9/68747470733a2f2f692e696d6775722e636f6d2f4c585a315a4c622e706e67"><img src="https://camo.githubusercontent.com/ace900256618d376a289d94c52b4ee129856488dc95b1532b5445bdd9a5fe8e9/68747470733a2f2f692e696d6775722e636f6d2f4c585a315a4c622e706e67" alt="img"></a> <a href="https://camo.githubusercontent.com/8e77afe7761d1c752b456b8dd6b02a9287eeeb2556bf67eebfd75cb8eab532b4/68747470733a2f2f692e696d6775722e636f6d2f4c61555135785a2e706e67"><img src="https://camo.githubusercontent.com/8e77afe7761d1c752b456b8dd6b02a9287eeeb2556bf67eebfd75cb8eab532b4/68747470733a2f2f692e696d6775722e636f6d2f4c61555135785a2e706e67" alt="img"></a></li><li>SMART User Stories: <strong>Specific, Measurable, Achievable, Relevant, and Time- boxed</strong> <a href="https://camo.githubusercontent.com/e088ec71ba5eeaf04f2ea9aa4eb5d1c7b17eb3474b5babff5543d718e0336b3b/68747470733a2f2f692e696d6775722e636f6d2f4644374d7373662e6a7067"><img src="https://camo.githubusercontent.com/e088ec71ba5eeaf04f2ea9aa4eb5d1c7b17eb3474b5babff5543d718e0336b3b/68747470733a2f2f692e696d6775722e636f6d2f4644374d7373662e6a7067" alt="img"></a> <a href="https://camo.githubusercontent.com/75a1f3cc1e754104f589d7546daf2581f7189189971428a45e12c60d68d09980/68747470733a2f2f692e696d6775722e636f6d2f396679714946662e6a7067"><img src="https://camo.githubusercontent.com/75a1f3cc1e754104f589d7546daf2581f7189189971428a45e12c60d68d09980/68747470733a2f2f692e696d6775722e636f6d2f396679714946662e6a7067" alt="img"></a> <a href="https://camo.githubusercontent.com/cd8254e3430cf6a97691ea6f8c46fbd5b8b0d74298715181072135a7b52ee840/68747470733a2f2f692e696d6775722e636f6d2f6d6f64657671642e706e67"><img src="https://camo.githubusercontent.com/cd8254e3430cf6a97691ea6f8c46fbd5b8b0d74298715181072135a7b52ee840/68747470733a2f2f692e696d6775722e636f6d2f6d6f64657671642e706e67" alt="img"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android app development </tag>
            
            <tag> Design patterns </tag>
            
            <tag> Data Base </tag>
            
            <tag> Hand Detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux folder</title>
      <link href="/liangjunyi.github.io/2022/05/18/linux-folder/"/>
      <url>/liangjunyi.github.io/2022/05/18/linux-folder/</url>
      
        <content type="html"><![CDATA[<h2 id="x2F-—-The-Root-Directory"><a href="#x2F-—-The-Root-Directory" class="headerlink" title="&#x2F; — The Root Directory"></a>&#x2F; — The Root Directory</h2><p>Everything on your Linux system is located under the &#x2F; directory, known as the root directory. You can think of the &#x2F; directory as being similar to the C:\ directory on Windows — but this isn’t strictly true, as Linux doesn’t have drive letters. While another partition would be located at D:\ on Windows, this other partition would appear in another folder under &#x2F; on Linux.</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image352.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-bin-—-Essential-User-Binaries"><a href="#x2F-bin-—-Essential-User-Binaries" class="headerlink" title="&#x2F;bin — Essential User Binaries"></a>&#x2F;bin — Essential User Binaries</h2><p>The &#x2F;bin directory contains the essential user binaries (programs) that must be present when the system is mounted in single-user mode. Applications such as Firefox are stored in &#x2F;usr&#x2F;bin, while important system programs and utilities such as the bash shell are located in &#x2F;bin. The &#x2F;usr directory may be stored on another partition — placing these files in the &#x2F;bin directory ensures the system will have these important utilities even if no other file systems are mounted. The &#x2F;sbin directory is similar — it contains essential system administration binaries.</p><p>是Binary的缩写，这个目录存放着最经常使用的命令</p><ul><li>比如 <code>cal</code></li><li>比如 <code>cd</code></li></ul><p>在它下面还有 <code>/user/bin</code> 和 <code>/user/local/bin</code></p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image353.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-boot-—-Static-Boot-Files"><a href="#x2F-boot-—-Static-Boot-Files" class="headerlink" title="&#x2F;boot — Static Boot Files"></a>&#x2F;boot — Static Boot Files</h2><p>The &#x2F;boot directory contains the files needed to boot the system — for example, the GRUB boot loader’s files and your Linux kernels are stored here. The boot loader’s configuration files aren’t located here, though — they’re in &#x2F;etc with the other configuration files.</p><p>存放的是启动Linux的时候使用的一些核心文件，包括一些连接文件以及镜像文件</p><h2 id="x2F-cdrom-—-Historical-Mount-Point-for-CD-ROMs"><a href="#x2F-cdrom-—-Historical-Mount-Point-for-CD-ROMs" class="headerlink" title="&#x2F;cdrom — Historical Mount Point for CD-ROMs"></a>&#x2F;cdrom — Historical Mount Point for CD-ROMs</h2><p>The &#x2F;cdrom directory isn’t part of the FHS standard, but you’ll still find it on Ubuntu and other operating systems. It’s a temporary location for CD-ROMs inserted in the system. However, the standard location for temporary media is inside the &#x2F;media directory.</p><h2 id="x2F-dev-—-Device-Files"><a href="#x2F-dev-—-Device-Files" class="headerlink" title="&#x2F;dev — Device Files"></a>&#x2F;dev — Device Files</h2><p>Linux exposes devices as files, and the &#x2F;dev directory contains a number of special files that represent devices. These are not actual files as we know them, but they appear as files — for example, &#x2F;dev&#x2F;sda represents the first SATA drive in the system. If you wanted to partition it, you could start a partition editor and tell it to edit &#x2F;dev&#x2F;sda.</p><p>This directory also contains pseudo-devices, which are virtual devices that don’t actually correspond to hardware. For example, &#x2F;dev&#x2F;random produces random numbers. &#x2F;dev&#x2F;null is a special device that produces no output and automatically discards all input — when you pipe the output of a command to &#x2F;dev&#x2F;null, you discard it.</p><p>类似于windows设备管理器，把所有的硬件以文件的形式存储</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image354.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-etc-—-Configuration-Files"><a href="#x2F-etc-—-Configuration-Files" class="headerlink" title="&#x2F;etc — Configuration Files"></a>&#x2F;etc — Configuration Files</h2><p>The &#x2F;etc directory contains configuration files, which can generally be edited by hand in a text editor. Note that the &#x2F;etc&#x2F; directory contains system-wide configuration files — user-specific configuration files are located in each user’s home directory.</p><p>所有的系统管理所需要的配置文件和子目录，比如安装mysql数据库，安装完成后，这个mysql的配置文件 <code>mysql.conf</code> 会放入这个目录下</p><h2 id="x2F-home-—-Home-Folders"><a href="#x2F-home-—-Home-Folders" class="headerlink" title="&#x2F;home — Home Folders"></a>&#x2F;home — Home Folders</h2><p>The &#x2F;home directory contains a home folder for each user. For example, if your user name is bob, you have a home folder located at &#x2F;home&#x2F;bob. This home folder contains the user’s data files and user-specific configuration files. Each user only has write access to their own home folder and must obtain elevated permissions (become the root user) to modify other files on the system.</p><p>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image355.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-lib-—-Essential-Shared-Libraries"><a href="#x2F-lib-—-Essential-Shared-Libraries" class="headerlink" title="&#x2F;lib — Essential Shared Libraries"></a>&#x2F;lib — Essential Shared Libraries</h2><p>The &#x2F;lib directory contains libraries needed by the essential binaries in the &#x2F;bin and &#x2F;sbin folder. Libraries needed by the binaries in the &#x2F;usr&#x2F;bin folder are located in &#x2F;usr&#x2F;lib.</p><p>系统开机所需要的最基本的动态链接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</p><h2 id="x2F-lost-found-—-Recovered-Files"><a href="#x2F-lost-found-—-Recovered-Files" class="headerlink" title="&#x2F;lost+found — Recovered Files"></a>&#x2F;lost+found — Recovered Files</h2><p>Each Linux file system has a lost+found directory. If the file system crashes, a file system check will be performed at next boot. Any corrupted files found will be placed in the lost+found directory, so you can attempt to recover as much data as possible.</p><p>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件</p><p>这个目录直接看找不到，在cmd中根目录下能看到指令为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> / <span class="token comment"># 到根目录下</span><span class="token function">ls</span> <span class="token comment"># 展示当前目录的东西</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="x2F-media-—-Removable-Media"><a href="#x2F-media-—-Removable-Media" class="headerlink" title="&#x2F;media — Removable Media"></a>&#x2F;media — Removable Media</h2><p>The &#x2F;media directory contains subdirectories where removable media devices inserted into the computer are mounted. For example, when you insert a CD into your Linux system, a directory will automatically be created inside the &#x2F;media directory. You can access the contents of the CD inside this directory.</p><p>linux系统会自动识别一些设备，例如U盘，光驱等等，当识别后，linux会把识别的设备挂载到这个目录下</p><h2 id="x2F-mnt-—-Temporary-Mount-Points"><a href="#x2F-mnt-—-Temporary-Mount-Points" class="headerlink" title="&#x2F;mnt — Temporary Mount Points"></a>&#x2F;mnt — Temporary Mount Points</h2><p>Historically speaking, the &#x2F;mnt directory is where system administrators mounted temporary file systems while using them. For example, if you’re mounting a Windows partition to perform some file recovery operations, you might mount it at &#x2F;mnt&#x2F;windows. However, you can mount other file systems anywhere on the system.</p><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载到 <code>/mnt/</code> 上，然后进入该目录就可以查看里面的内容了   </p><p><code>d:/myshare</code> 就用到了这个目录，使我们虚拟机linux和windows共享了这个文件夹</p><h2 id="x2F-opt-—-Optional-Packages"><a href="#x2F-opt-—-Optional-Packages" class="headerlink" title="&#x2F;opt — Optional Packages"></a>&#x2F;opt — Optional Packages</h2><p>The &#x2F;opt directory contains subdirectories for optional software packages. It’s commonly used by proprietary software that doesn’t obey the standard file system hierarchy — for example, a proprietary program might dump its files in &#x2F;opt&#x2F;application when you install it.</p><p>这是给主机额外安装软件所存放的目录。如安装ORACLE数据库就可以放到该目录下。默认为空。</p><p>一般我们先把安装文件拷贝到opt目录下面来，便于管理，约定俗成</p><h2 id="x2F-proc-—-Kernel-amp-Process-Files"><a href="#x2F-proc-—-Kernel-amp-Process-Files" class="headerlink" title="&#x2F;proc — Kernel &amp; Process Files"></a>&#x2F;proc — Kernel &amp; Process Files</h2><p>The &#x2F;proc directory similar to the &#x2F;dev directory because it doesn’t contain standard files. It contains special files that represent system and process information.</p><p>这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息，一般不能动这个文件</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image356.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-root-—-Root-Home-Directory"><a href="#x2F-root-—-Root-Home-Directory" class="headerlink" title="&#x2F;root — Root Home Directory"></a>&#x2F;root — Root Home Directory</h2><p>The &#x2F;root directory is the home directory of the root user. Instead of being located at &#x2F;home&#x2F;root, it’s located at &#x2F;root. This is distinct from &#x2F;, which is the system root directory.</p><p>该目录为系统管理员，也称作超级权限者的用户主目录</p><h2 id="x2F-run-—-Application-State-Files"><a href="#x2F-run-—-Application-State-Files" class="headerlink" title="&#x2F;run — Application State Files"></a>&#x2F;run — Application State Files</h2><p>The &#x2F;run directory is fairly new, and gives applications a standard place to store transient files they require like sockets and process IDs. These files can’t be stored in &#x2F;tmp because files in &#x2F;tmp may be deleted.</p><h2 id="x2F-sbin-—-System-Administration-Binaries"><a href="#x2F-sbin-—-System-Administration-Binaries" class="headerlink" title="&#x2F;sbin — System Administration Binaries"></a>&#x2F;sbin — System Administration Binaries</h2><p>The &#x2F;sbin directory is similar to the &#x2F;bin directory. It contains essential binaries that are generally intended to be run by the root user for system administration.</p><p>s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image357.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-selinux-—-SELinux-Virtual-File-System"><a href="#x2F-selinux-—-SELinux-Virtual-File-System" class="headerlink" title="&#x2F;selinux — SELinux Virtual File System"></a>&#x2F;selinux — SELinux Virtual File System</h2><p>If your Linux distribution uses SELinux for security (Fedora and Red Hat, for example), the &#x2F;selinux directory contains special files used by SELinux. It’s similar to &#x2F;proc. Ubuntu doesn’t use SELinux, so the presence of this folder on Ubuntu appears to be a bug.</p><p>security-enhanced linux SELinux是一种安全子系统，他能控制程序只能访问特定文件，有三种工作模式，可以自行设置</p><h2 id="x2F-srv-—-Service-Data"><a href="#x2F-srv-—-Service-Data" class="headerlink" title="&#x2F;srv — Service Data"></a>&#x2F;srv — Service Data</h2><p>The &#x2F;srv directory contains “data for services provided by the system.” If you were using the Apache HTTP server to serve a website, you’d likely store your website’s files in a directory inside the &#x2F;srv directory.</p><p><strong>RELATED:</strong> <a href="https://www.howtogeek.com/devops/how-to-find-your-apache-configuration-folder/">*<strong>How to Find Your Apache Configuration Folder*</strong></a></p><p>service的缩写，该目录存放一些服务启动之后需要提取的数据</p><h2 id="x2F-tmp-—-Temporary-Files"><a href="#x2F-tmp-—-Temporary-Files" class="headerlink" title="&#x2F;tmp — Temporary Files"></a>&#x2F;tmp — Temporary Files</h2><p>Applications store temporary files in the &#x2F;tmp directory. These files are generally deleted whenever your system is restarted and may be deleted at any time by utilities such as tmpwatch.</p><p>存放一些临时文件</p><h2 id="x2F-usr-—-User-Binaries-amp-Read-Only-Data"><a href="#x2F-usr-—-User-Binaries-amp-Read-Only-Data" class="headerlink" title="&#x2F;usr — User Binaries &amp; Read-Only Data"></a>&#x2F;usr — User Binaries &amp; Read-Only Data</h2><p>The &#x2F;usr directory contains applications and files used by users, as opposed to applications and files used by the system. For example, non-essential applications are located inside the &#x2F;usr&#x2F;bin directory instead of the &#x2F;bin directory and non-essential system administration binaries are located in the &#x2F;usr&#x2F;sbin directory instead of the &#x2F;sbin directory. Libraries for each are located inside the &#x2F;usr&#x2F;lib directory. The &#x2F;usr directory also contains other directories — for example, architecture-independent files like graphics are located in &#x2F;usr&#x2F;share.</p><p>The &#x2F;usr&#x2F;local directory is where locally compiled applications install to by default — this prevents them from mucking up the rest of the system.</p><p>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录</p><p><code>/usr/local</code> 是另一个给主机额外安装软件的目录。一般是通过编译源码方式安装的程序。</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image358.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-var-—-Variable-Data-Files"><a href="#x2F-var-—-Variable-Data-Files" class="headerlink" title="&#x2F;var — Variable Data Files"></a>&#x2F;var — Variable Data Files</h2><p>The &#x2F;var directory is the writable counterpart to the &#x2F;usr directory, which must be read-only in normal operation. Log files and everything else that would normally be written to &#x2F;usr during normal operation are written to the &#x2F;var directory. For example, you’ll find log files in &#x2F;var&#x2F;log.</p><p>这个目录中存放着在不断扩充的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/liangjunyi.github.io/2022/05/18/hello-world/"/>
      <url>/liangjunyi.github.io/2022/05/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
